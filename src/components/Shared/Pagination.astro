---
interface Props {
  totalPages: number;
  currentPage: number;
  pagesToShow: number;
  lastPage: number;
  baseUrl: string;
}
const { totalPages, currentPage, pagesToShow, baseUrl, lastPage } = Astro.props;

function getPaginationRange(
  totalPages: number,
  currentPage: number,
  pagesToShow: number
) {
  const halfPagesToShow = Math.floor(pagesToShow / 2);
  let startPage = currentPage - halfPagesToShow;
  if (startPage <= 0) {
    startPage = 1;
  }
  let endPage = startPage + pagesToShow - 1;
  if (endPage > totalPages) {
    endPage = totalPages;
    startPage = Math.max(1, endPage - pagesToShow + 1);
  }
  return Array.from(
    { length: endPage - startPage + 1 },
    (_, i) => startPage + i
  );
}

const paginationRange = getPaginationRange(
  totalPages,
  currentPage,
  pagesToShow
);

const isFirstPage = currentPage === 1;
const isLastPage = currentPage === lastPage;
---

<nav class="pagination" aria-label="Pagination">
  <ul>
    <li>
      <a
        href={isFirstPage ? "#" : `${baseUrl}/${currentPage - 1}`}
        aria-label="Previous">«</a
      >
    </li>

    {
      paginationRange.map((page) => (
        <li>
          <a
            href={`${baseUrl}/${page}`}
            class={page === currentPage ? "active" : ""}
            aria-label={`Page ${page}`}
          >
            {page}
          </a>
        </li>
      ))
    }
    <li>
      <a
        href={isLastPage ? "#" : `${baseUrl}/${currentPage + 1}`}
        aria-label="Next">»</a
      >
    </li>
  </ul>
</nav>

<style>
  li {
    transform: scale(1);
    transition: transform 0.2s ease-in-out;
  }

  li:hover {
    transform: scale(1.05);
  }
  .pagination {
    display: flex;
    justify-content: center;
    margin-top: 20px;
  }

  .pagination ul {
    list-style-type: none;
    padding: 0;
    margin: 0;
    display: flex;
  }

  .pagination li {
    margin: 0 5px;
  }

  .pagination a {
    @apply text-gray-500;
    display: block;
    padding: 5px 10px;
    text-decoration: none;
  }

  .pagination a.active {
    @apply rounded-md bg-primary text-secondary;
  }
</style>
